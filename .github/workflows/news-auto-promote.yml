name: News Auto-Promote (every 60 min)
on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  auto-promote:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch robot index
        id: grab
        run: |
          set -euo pipefail
          URL="${{ secrets.SITE_URL }}/api/news/ingest"  # acorda o robô
          curl -fsS -m 30 "$URL" || true

          ROBOT="${{ secrets.SITE_URL }}/api/news/robot-index" || true
          # Se você não tem /api/news/robot-index, use diretamente o Blob público:
          ROBOT_BLOB="$(curl -fsSL "${{ secrets.SITE_URL }}/api/news/ingest?emitIndex=1" || true)"
          echo "Robot index helper (se existir): $ROBOT"
          echo "EmitIndex (se existir): $ROBOT_BLOB"

      - name: Promote last N items (direct from Blob)
        env:
          SITE: ${{ secrets.SITE_URL }}
          TOKEN: ${{ secrets.NEWS_ADMIN_TOKEN }}
        run: |
          set -euo pipefail
          # Baixa o índice do robô direto no Blob
          ROBOT_INDEX_URL="$(curl -fsSL "$SITE/api/news/where-is-robot-index" || true)"
          if [ -z "$ROBOT_INDEX_URL" ]; then
            # fallback: construa manualmente a URL pública do seu Blob para news/uap/index.json
            # Ex.: https://<seu-bucket>.public.blob.vercel-storage.com/news/uap/index.json
            echo ">> Configure a URL pública do news/uap/index.json"
            exit 0
          fi

          echo "Robot index: $ROBOT_INDEX_URL"
          json="$(curl -fsSL "$ROBOT_INDEX_URL")" || { echo "Falha ao ler robot index"; exit 1; }

          # Extrai até 10 URLs usando Node (evita depender de jq)
          urls=$(node -e "const j=JSON.parse(process.argv[1]||'{}');const a=(j.items||[]).map(i=>i.url).filter(Boolean).slice(0,10);console.log(a.join('\n'))" "$json")

          echo ">> Itens a promover:"
          echo "$urls"

          i=0
          while IFS= read -r u; do
            [ -z "$u" ] && continue
            echo "POST $u"
            curl -fsS -X POST "$SITE/api/news/promote" \
              -H "Authorization: Bearer $TOKEN" \
              -H "Content-Type: application/json" \
              --data "{\"sourceUrl\":\"$u\"}" \
              || { echo "Falha em $u"; exit 22; }
            i=$((i+1))
          done <<< "$urls"

          echo "Promovidos: $i"
